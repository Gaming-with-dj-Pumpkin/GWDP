local TweenService = game:GetService("TweenService")
local Audio = require(SScript.ModuleCode.SoundModule)
local AudioData = require(RStorage.ClientModules.GameData)

local Module = {}

local events = {
	Pandemic = function(player)
		-- add your logic for the Pandemic ending here
	end,
	UnsuccessfulEvasion = function(player)
		-- add your logic for the UnsuccessfulEvasion ending here
	end,
	ForbiddenSnack = function(player)
		-- add your logic for the ForbiddenSnack ending here
		local frame = player.PlayerGui.UI.EndingUI.MainFrame

		-- event logic for the ForbiddenSnack ending
		local endingData = EndingsManager.endings.ForbiddenSnack
		local badgeId = endingData.badgeId
		local kickMessage = endingData.kickMessage
		local endingName = endingData.endingName

		-- perform actions specific to the ForbiddenSnack ending
		local character = player.Character
		local humanoid = character and character:FindFirstChildOfClass("Humanoid")
		local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")

		if not humanoid or not humanoidRootPart then
			warn("Character or HumanoidRootPart not found for player: " .. player.Name)
			return
		end

		workspace.GameContainer.Audio.StomachGrowl:Play()
		wait(3) -- wait for 3 seconds
		Audio.PlaySound(AudioData.SkibiBomb, 1, character.Torso, false)
		workspace.GameContainer.Audio.StomachGrowl:Stop()
		wait(1.1) -- wait for 1.1 seconds
		local explosion = Instance.new("Explosion")
		explosion.Parent = workspace.TemporaryFX
		explosion.Position = humanoidRootPart.Position
		game.Debris:AddItem(explosion, 3)
		wait(2) -- wait for 2 seconds
		workspace.GameContainer.Audio.Announcer_Defeat:Play()
		frame.Visible = true

		local startPos = UDim2.new(0.5, 0, -0.9, 0)

		local endPos = UDim2.new(0.5, 0, 0.5, 0)

		local bounceInfo = TweenInfo.new(
			2,              -- duration of the tween (2 seconds)
			Enum.EasingStyle.Bounce,   -- Bouncing easing style
			Enum.EasingDirection.Out,  -- Outward direction
			0,              -- number of times to repeat (0 means no repeat)
			false,          -- reverses the tween when repeating
			0               -- delay before starting the tween (in seconds)
		)

		local bounceTween = TweenService:Create(frame, bounceInfo, {Position = endPos})
		bounceTween:Play()
		wait(3) -- wait for 3 seconds
		print("test test") -- this line will execute after the 3-second delay
	end,
	-- add whatever you want for different endings here.
}

function Module.TriggerEnding(player, endingName)
	local event = events[endingName]
	if event then
		event(player)
	else
		warn("No event found for the ending: " .. endingName)
	end
end

return Module
-- Variables --
local SScript = game:GetService("ServerScriptService")
local RStorage = game:GetService("ReplicatedStorage")
local EndingsManager = require(SScript.Ending.EndingSettings)
local TweenService = game:GetService("TweenService")
local Audio = require(SScript.ModuleCode.SoundModule)
local AudioData = require(RStorage.ClientModules.GameData)
local Tool = script.Parent; 
local ValueSetting = require(RStorage.ClientModules.ValueSettings)
local playerservice = game:GetService("Players")
Consume = true

function Grab()
	Tool.GripForward = Vector3.new(0.675, -0.675, -0.3)
	Tool.GripPos = Vector3.new(0.4, -0.9, 0.9)
	Tool.GripRight = Vector3.new(0.212, -0.212, 0.954)
	Tool.GripUp = Vector3.new(0.707, 0.707, 0)


	Tool.Handle.DrinkSound:Play()

	task.wait(.8)
	Tool.GripForward = Vector3.new(-1, 0, 0)
	Tool.GripPos = Vector3.new(.2, 0, 0)
	Tool.GripRight = Vector3.new(0, 0, -1)
	Tool.GripUp = Vector3.new(0,1,0)
end
	
local EndingModule = require(SScript.Ending.MainHandler)
function onActivated()
	if workspace:WaitForChild("Living"):FindFirstChild("Disabled") then return end
	if not Consume  then
		return
	end
	Consume = false
	Grab()
	local character = Tool.Parent
	local Player = playerservice:GetPlayerFromCharacter(character)
	character.HumanoidRootPart.Anchored = true
	EndingModule.TriggerEnding(Player, "ForbiddenSnack")
		ValueSetting:CreateBooleanValue("Disabled", true)
end

function onEquipped()
	Tool.Handle.OpenSound:Play()
end

script.Parent.Activated:connect(onActivated)
script.Parent.Equipped:connect(onEquipped)

task.spawn(function()
    EndingModule.TriggerEnding(Player, "ForbiddenSnack")
end)



return Module
Script 8
GiftFrame.ClipContainer.Buy.Button.Activated:Connect(function()
	if not self.GiftingUserId then
		NoticeController:Prompt("You haven't put a valid username in the gift box above", "Alert")

		return
	end

	if self.GiftingUserId == Player.UserId then
		NoticeController:Prompt("Sorry, you can't send yourself gifts", "Alert")

		return
	end

	if SendingGift then
		return -- Debounce buffer
	end

	SendingGift = true

	PurchaseController:Open()

	local Success, Message = StoreService:GiftingUserId(self.GiftingUserId)
	if Success then
		MarketplaceService:PromptProductPurchase(Player, giftData.Id)
	else
		NoticeController:Prompt(Message, "Alert")
	end

	SendingGift = false
end)

Script 9
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local plr = game.Players.LocalPlayer
local remoteEvent = ReplicatedStorage:WaitForChild("MovementEvent") 
local reason = "Crouch"

local isCKeyPressed = true

local function onKeyPress(input, gameProcessedEvent)
	if input.KeyCode == Enum.KeyCode.C and not gameProcessedEvent then
		if isCKeyPressed == true then
			
			remoteEvent:FireServer(plr, reason)
		end
		task.wait(5)
		print("waiting")
		isCKeyPressed = false
	end
end

local function onKeyRelease(input, gameProcessedEvent)
	if input.KeyCode == Enum.KeyCode.C and not gameProcessedEvent then
		if isCKeyPressed == false then
			
			local endCrouch = true

			remoteEvent:FireServer(plr, endCrouch)
		end
		task.wait(5)
		print("waiting")
		isCKeyPressed = true
	end
end

UserInputService.InputBegan:Connect(onKeyPress)
UserInputService.InputEnded:Connect(onKeyRelease)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local remoteEvent = ReplicatedStorage:WaitForChild("MovementEvent")

local anim = Instance.new("Animation")
anim.AnimationId = "http://www.roblox.com/Asset?ID=15209290885"
local track

remoteEvent.OnServerEvent:Connect(function(plr, reason)
	
	if reason then
	   
		
	character = plr.Character
		
	if character then
			humanoid = character:FindFirstChild("Humanoid")
			
			if humanoid then
				print("lowering stats")
				
				humanoid.WalkSpeed = humanoid.WalkSpeed -10
			humanoid.JumpPower = 0
			track = humanoid:LoadAnimation(anim)
			track.Priority = Enum.AnimationPriority.Action
				track.Looped = true
				
				track:Play()
				
		end
		end
	else
		print("nuh uh")
		end
end)

remoteEvent.OnServerEvent:Connect(function(plr, endCrouch)
	
	if endCrouch then
		if track then
			print("stop track")
			track.Looped = false
			track:Stop()
			
		end
		
		if character then
			humanoid = character:FindFirstChild("Humanoid")

			if humanoid then
				print("change back")
				humanoid.WalkSpeed = humanoid.WalkSpeed +10
				humanoid.JumpPower = 45
				
			end
		end
	end

end)
Script 10
local pickaxe = script.Parent
local pickvalue = game:GetService("ReplicatedStorage").Tool.CurrentPickaxe
pickaxe.Equipped:Connect(function()
	pickvalue.Value = 1
        print(pickvalue.Value)
end)
Script 11
local module = {}

module.Equipment = {
[“ToolName”] = {
Cooldown = 1,

}
}

return module
local module = {}

module.SizeChance = {
	Small = 3,
	Medium = 1,
	Large = 0.6,
}

return module
Script 12
local ragdoll = {}

local RunService = game:GetService("RunService")
local makeCollidable = {
	"Right Arm",
	"Left Arm",
	"Right Leg",
	"Left Leg"
}

function ragdoll.Start(character)
	if character.Ragdoll.Value then return end

	character.Ragdoll.Value = true
	
	for i, joint in pairs(character:GetDescendants()) do
		if joint:IsA("Motor6D") then
			local socket = Instance.new("BallSocketConstraint")
			local a0 = Instance.new("Attachment")
			local a1 = Instance.new("Attachment")
			
			a0.Parent = joint.Part0
			a1.Parent = joint.Part1
			
			socket.Parent = joint.Parent
			socket.Attachment0 = a0
			socket.Attachment1 = a1
			
			a0.CFrame = joint.C0
			a1.CFrame = joint.C1
			
			socket.LimitsEnabled = true
			socket.TwistLimitsEnabled = true

			joint.Enabled = false
		end
	end

	if not character:FindFirstChild('HumanoidRootPart').RootJoint.Enabled then
		character:FindFirstChild('HumanoidRootPart').RootJoint.Enabled = true
	end

	character.Humanoid.WalkSpeed = 0
	character.Humanoid.JumpPower = 0

	character.Humanoid.PlatformStand = true

	character.Humanoid.AutoRotate = false

	for _, v in pairs(character:GetChildren()) do
		if table.find(makeCollidable, v.Name) ~= nil then
			local Stop = Instance.new("BoolValue", v)
			Stop.Name = "stop"
			
			local s = false
			v.ChildRemoved:Connect(function(child)
				if child.Name == "Stop" then
					s = true
				end
			end)
			
			local c
			c = RunService.Stepped:Connect(function()
				if s then
					c:Disconnect()
					return
				end
				v.CanCollide = true
			end)
		end
	end
end

function ragdoll.Stop(character)
	local hrp = character:FindFirstChild("HumanoidRootPart")
	local hum = character:FindFirstChild("Humanoid")

	if hum.Health <= 0 then return end

	for _, v in pairs(character:GetChildren()) do
		if table.find(makeCollidable, v.Name) ~= nil then
			if v:FindFirstChild("Stop") then
				v.Stop:Destroy()
			end
		end
	end

	hum.PlatformStand = false

	for i, joint in pairs(character:GetDescendants()) do
		if joint:IsA("BallSocketConstraint") then
			joint:Destroy()
		end

		if joint:IsA("Motor6D") then
			joint.Enabled = true
		end
	end

	character.Ragdoll.Value = false

	hum:ChangeState(Enum.HumanoidStateType.GettingUp)

	hum.WalkSpeed = 16
	hum.JumpPower = 50

	hum.AutoRotate = true
end

return ragdoll
script 13
local Response = nil
local Additional = nil
Response, Additional = InviteClient:InvokeClient(Requestee, Inviter.Name)
for i = 1, 10 do
	print(Response)
	if Response ~= nil then
		break
	end
	task.wait(1)
end

ClientReceived.OnClientInvoke = function(Requester)
	local GUI = ReplicatedStorage.Storage.UIs.Request:Clone()
	GUI.Frame.Req.Text = Requester
	GUI.Parent = Player.PlayerGui
	GUI.Frame.Accept.MouseButton1Down:Connect(function()
		--
		return true
	end)
	GUI.Frame.Decline.MouseButton1Down:Connect(function()
		--
		return false
	end)
end
script 14
game.Players.PlayerAdded:connect(function(player)
	player.CharacterAdded:connect(function(character)
		local ragdollV3 = script.RagdollV3:Clone()
		ragdollV3.Parent = character
		ragdollV3.Disabled = false
	end)
end)```

-----------------------------------------------------------------------------------------------------------------------------------------

Local Script:
```repeat wait() until workspace.CurrentCamera ~= nil
wait(0.001)

local cleanUpTime = 9999999999999999 -- change this to whatever you want

local function NewHingePart()
	local B = Instance.new("Part")
	B.TopSurface = 0 B.BottomSurface = 0
	B.Shape = "Ball"
	B.Size = Vector3.new(1, 1, 1)
	B.Transparency = 1 B.CanCollide = true
	return B
end
local function CreateJoint(j_type, p0, p1, c0, c1)
	local nj = Instance.new(j_type)
	nj.Part0 = p0 nj.part1 = p1
	if c0 ~= nil then nj.C0 = c0 end
	if c1 ~= nil then nj.C1 = c1 end
	nj.Parent = p0
end

local AttactmentData = { --Limb socket attaching to Torso
	--["AttachmentTag"] = {part_name, part_attachment, torso_attachment, relative_position}
	["RA"] = {"Right Arm", CFrame.new(0, 0.5, 0), CFrame.new(1.5, 0.5, 0), CFrame.new(1.5, 0, 0)},
	["LA"] = {"Left Arm", CFrame.new(0, 0.5, 0), CFrame.new(-1.5, 0.5, 0), CFrame.new(-1.5, 0, 0)},
	["RL"] = {"Right Leg", CFrame.new(0, 0.5, 0), CFrame.new(0.5, -1.5, 0), CFrame.new(0.5, -2, 0)},
	["LL"] = {"Left Leg", CFrame.new(0, 0.5, 0), CFrame.new(-0.5, -1.5, 0), CFrame.new(-0.5, -2, 0)},
}

local collision_part = Instance.new("Part")
collision_part.Name = "CP"
collision_part.TopSurface = Enum.SurfaceType.Smooth
collision_part.BottomSurface = Enum.SurfaceType.Smooth
collision_part.Size = Vector3.new(1, 1.5, 1)
collision_part.Transparency = 1

local camera = workspace.CurrentCamera
local char = script.Parent

function RagdollV3()
	char.Archivable = true
	local ragdoll = char:clone()
	char.Archivable = false
	
	local hdv = ragdoll:FindFirstChild("Head")
	
	--Clears the real character from everything but humanoid
	for _, obj in pairs(char:GetChildren()) do 
		if not obj:IsA("Humanoid") then
			obj:destroy()
		end
	end
	
	--set up the ragdoll
	local function scan(ch)
		for i = 1, #ch do
			scan(ch[i]:GetChildren())
			if (ch[i]:IsA("ForceField") or ch[i].Name == "HumanoidRootPart") or ((ch[i]:IsA("Weld") or ch[i]:IsA("Motor6D")) and ch[i].Name ~= "HeadWeld" and ch[i].Name ~= "AttachementWeld") then
				ch[i]:destroy()
			end
		end
	end
	scan(ragdoll:GetChildren())
	local function scanc(ch)
		for _, obj in pairs(ch:GetChildren()) do
			scanc(obj)
			if obj:IsA("Script") or obj:IsA("LocalScript") or ((obj:IsA("Weld") or obj:IsA("Motor6D")) and obj.Name ~= "AttachementWeld") or obj:IsA("ForceField") or (obj:IsA("Snap") and obj.Parent.Name == "Torso")
				or obj:IsA("ParticleEmitter")then
				obj:destroy()
			elseif obj:IsA("BasePart") then
				obj.Velocity = Vector3.new(0, 0, 0)
				obj.RotVelocity = Vector3.new(0, 0, 0)
				if obj.Parent:IsA("Accessory") then
					obj.CanCollide = false
				end
			end
		end
	end
	scanc(ragdoll)
	
	local f_head
	
	local fhum = ragdoll:FindFirstChild("Humanoid")
	fhum.HealthDisplayType = Enum.HumanoidHealthDisplayType.AlwaysOff
	fhum.PlatformStand = true
	fhum.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
	fhum.Name = "RagdollHumanoid"
	
	local Torso = ragdoll:FindFirstChild("Torso")
	if Torso then
		Torso.Velocity = Vector3.new(math.random(), 0.0000001, math.random()).unit * 5 + (Vector3.new(0, 0.15, 0))
		local Head = ragdoll:FindFirstChild("Head")
		if Head then
			camera.CameraSubject = Head
			CreateJoint("Weld", Torso, Head, CFrame.new(0, 1.5, 0))
		end
		
		for att_tag, att_data in pairs(AttactmentData) do
			local get_limb = ragdoll:FindFirstChild(att_data[1])
			if get_limb ~= nil then
				
				local att1 = Instance.new("Attachment")
				att1.Name = att_tag
				att1.CFrame = att_data[2]
				att1.Parent = get_limb
				
				local att2 = Instance.new("Attachment")
				att2.Name = att_tag
				att2.CFrame = att_data[3]
				att2.Parent = Torso
				
				local socket = Instance.new("BallSocketConstraint")
				socket.Name = att_tag .. "_SOCKET"
				socket.Attachment0 = att2
				socket.Attachment1 = att1
				socket.Radius = 0
				socket.Parent = Torso
				
				get_limb.CanCollide = false
				
				local cp = collision_part:Clone()
				local cp_weld = Instance.new("Weld")
				cp_weld.C0 = CFrame.new(0, -0.25, 0)
				cp_weld.Part0 = get_limb
				cp_weld.Part1 = cp
				cp_weld.Parent = cp
				cp.Parent = ragdoll
			end
		end
	end
	ragdoll.Parent = workspace.RagdollFolder
	game:GetService("Debris"):AddItem(ragdoll, cleanUpTime)
	fhum.MaxHealth = 100
	fhum.Health = fhum.MaxHealth
end

char.Humanoid.Died:connect(RagdollV3)```

game.Players.PlayerAdded:connect(function(player)
	player.CharacterAdded:connect(function(character)
		local ragdollV3 = script.RagdollV3:Clone()
		ragdollV3.Parent = character
		ragdollV3.Disabled = false
	end)
end)```

-----------------------------------------------------------------------------------------------------------------------------------------

Local Script:
```repeat wait() until workspace.CurrentCamera ~= nil
wait(0.001)

local cleanUpTime = 9999999999999999 -- change this to whatever you want

local function NewHingePart()
	local B = Instance.new("Part")
	B.TopSurface = 0 B.BottomSurface = 0
	B.Shape = "Ball"
	B.Size = Vector3.new(1, 1, 1)
	B.Transparency = 1 B.CanCollide = true
	return B
end
local function CreateJoint(j_type, p0, p1, c0, c1)
	local nj = Instance.new(j_type)
	nj.Part0 = p0 nj.part1 = p1
	if c0 ~= nil then nj.C0 = c0 end
	if c1 ~= nil then nj.C1 = c1 end
	nj.Parent = p0
end

local AttactmentData = { --Limb socket attaching to Torso
	--["AttachmentTag"] = {part_name, part_attachment, torso_attachment, relative_position}
	["RA"] = {"Right Arm", CFrame.new(0, 0.5, 0), CFrame.new(1.5, 0.5, 0), CFrame.new(1.5, 0, 0)},
	["LA"] = {"Left Arm", CFrame.new(0, 0.5, 0), CFrame.new(-1.5, 0.5, 0), CFrame.new(-1.5, 0, 0)},
	["RL"] = {"Right Leg", CFrame.new(0, 0.5, 0), CFrame.new(0.5, -1.5, 0), CFrame.new(0.5, -2, 0)},
	["LL"] = {"Left Leg", CFrame.new(0, 0.5, 0), CFrame.new(-0.5, -1.5, 0), CFrame.new(-0.5, -2, 0)},
}

local collision_part = Instance.new("Part")
collision_part.Name = "CP"
collision_part.TopSurface = Enum.SurfaceType.Smooth
collision_part.BottomSurface = Enum.SurfaceType.Smooth
collision_part.Size = Vector3.new(1, 1.5, 1)
collision_part.Transparency = 1

local camera = workspace.CurrentCamera
local char = script.Parent

function RagdollV3()
	char.Archivable = true
	local ragdoll = char:clone()
	char.Archivable = false
	
	local hdv = ragdoll:FindFirstChild("Head")
	
	--Clears the real character from everything but humanoid
	for _, obj in pairs(char:GetChildren()) do 
		if not obj:IsA("Humanoid") then
			obj:destroy()
		end
	end
	
	--set up the ragdoll
	local function scan(ch)
		for i = 1, #ch do
			scan(ch[i]:GetChildren())
			if (ch[i]:IsA("ForceField") or ch[i].Name == "HumanoidRootPart") or ((ch[i]:IsA("Weld") or ch[i]:IsA("Motor6D")) and ch[i].Name ~= "HeadWeld" and ch[i].Name ~= "AttachementWeld") then
				ch[i]:destroy()
			end
		end
	end
	scan(ragdoll:GetChildren())
	local function scanc(ch)
		for _, obj in pairs(ch:GetChildren()) do
			scanc(obj)
			if obj:IsA("Script") or obj:IsA("LocalScript") or ((obj:IsA("Weld") or obj:IsA("Motor6D")) and obj.Name ~= "AttachementWeld") or obj:IsA("ForceField") or (obj:IsA("Snap") and obj.Parent.Name == "Torso")
				or obj:IsA("ParticleEmitter")then
				obj:destroy()
			elseif obj:IsA("BasePart") then
				obj.Velocity = Vector3.new(0, 0, 0)
				obj.RotVelocity = Vector3.new(0, 0, 0)
				if obj.Parent:IsA("Accessory") then
					obj.CanCollide = false
				end
			end
		end
	end
	scanc(ragdoll)
	
	local f_head
	
	local fhum = ragdoll:FindFirstChild("Humanoid")
	fhum.HealthDisplayType = Enum.HumanoidHealthDisplayType.AlwaysOff
	fhum.PlatformStand = true
	fhum.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
	fhum.Name = "RagdollHumanoid"
	
	local Torso = ragdoll:FindFirstChild("Torso")
	if Torso then
		Torso.Velocity = Vector3.new(math.random(), 0.0000001, math.random()).unit * 5 + (Vector3.new(0, 0.15, 0))
		local Head = ragdoll:FindFirstChild("Head")
		if Head then
			camera.CameraSubject = Head
			CreateJoint("Weld", Torso, Head, CFrame.new(0, 1.5, 0))
		end
		
		for att_tag, att_data in pairs(AttactmentData) do
			local get_limb = ragdoll:FindFirstChild(att_data[1])
			if get_limb ~= nil then
				
				local att1 = Instance.new("Attachment")
				att1.Name = att_tag
				att1.CFrame = att_data[2]
				att1.Parent = get_limb
				
				local att2 = Instance.new("Attachment")
				att2.Name = att_tag
				att2.CFrame = att_data[3]
				att2.Parent = Torso
				
				local socket = Instance.new("BallSocketConstraint")
				socket.Name = att_tag .. "_SOCKET"
				socket.Attachment0 = att2
				socket.Attachment1 = att1
				socket.Radius = 0
				socket.Parent = Torso
				
				get_limb.CanCollide = false
				
				local cp = collision_part:Clone()
				local cp_weld = Instance.new("Weld")
				cp_weld.C0 = CFrame.new(0, -0.25, 0)
				cp_weld.Part0 = get_limb
				cp_weld.Part1 = cp
				cp_weld.Parent = cp
				cp.Parent = ragdoll
			end
		end
	end
	ragdoll.Parent = workspace.RagdollFolder
	game:GetService("Debris"):AddItem(ragdoll, cleanUpTime)
	fhum.MaxHealth = 100
	fhum.Health = fhum.MaxHealth
end

char.Humanoid.Died:connect(RagdollV3)```
--Clears the real character from everything but humanoid
for _, obj in pairs(char:GetChildren()) do 
	if not obj:IsA("Humanoid") then
		obj:destroy()
	end
end
--Clears the real character from everything but humanoid and this script itself
for _, obj in char:GetChildren() do 
	if not obj:IsA("Humanoid") and obj ~= script then
		obj:Destroy()
	end
end
script 15
local SawCFrame = Saw.PrimaryPart.CFrame * CFrame.Angles(0, math.pi/2, 0)
local AngleToSaw = -SawCFrame:Inverse().RightVector:Dot(Log.CFrame.RightVector)
if AngleToSaw > 0.95 or AngleToSaw < -0.95 then
	--Pillar cut here. Works fine
else
	local SawMark = SawCFrame:Inverse() * Log.CFrame
	if (SawMark.Z < Log.Size.X / 2 and -SawMark.Z < Log.Size.X / 2) then
		local Size1 = SawMark.Z + Log.Size.X / 2
		local Size2 = Log.Size.X - Size1
		local Offset1 = (Size1 - Log.Size.X) / 2
		local Offset2 = (Log.Size.X - Size2) / 2
		local Pillar1 = Instance.new("Part")
		Pillar1.Material = Log.Material
		Pillar1.Color = Log.Color
		Pillar1.Shape = Enum.PartType.Cylinder
		Pillar1.Name = "Log"
		Pillar1.Size = Vector3.new(Size1, Log.Size.Y, Log.Size.Z)
		Pillar1.CFrame = Log.CFrame * CFrame.new(Offset1, 0, 0)

		local Pillar2 = Pillar1:Clone()
		Pillar2.Size = Vector3.new(Size2, Log.Size.Y, Log.Size.Z)
		Pillar2.CFrame = Log.CFrame * CFrame.new(Offset2, 0, 0)

		Pillar2.Color = Color3.fromRGB(255, 0, 0)

		Log:Destroy()

		Pillar1.Anchored = true
		Pillar2.Anchored = true

		Pillar1.Parent = workspace
		Pillar2.Parent = workspace
	end
end
Script 16
Client Code:

local Button = script.Parent
local Player = game:GetService("Players").LocalPlayer
local char = game.Players.LocalPlayer.Character
local MainMenuGui = game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("MainMenuGui")
local LoadingGui = game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("LoadingGui")
local ButtonPressedEvent = game.ReplicatedStorage.RemoteEvents.ButtonPressed

Button.MouseButton1Click:Connect(function()
	ButtonPressedEvent:FireServer(Player)
end)

Server Code:

local TPService = game:GetService("TeleportService")
local ButtonPressedEvent = game.ReplicatedStorage.RemoteEvents.ButtonPressed

local TPPlaceID = 14689927963
local TeleportGui = game.ReplicatedStorage.TeleportGui

TPService:SetTeleportGui(TeleportGui)

ButtonPressedEvent.OnServerEvent:Connect(function(Player)
	local success, result = pcall(TPService:TeleportAsync(TPPlaceID, {Player}))
end)

script 17
Client:
local Button = script.Parent
local Player = game:GetService("Players").LocalPlayer
local ButtonPressedEvent = game.ReplicatedStorage.RemoteEvents.ButtonPressed

Button.MouseButton1Click:Connect(function()
    ButtonPressedEvent:FireServer(Player)
end)

Server:
local TPService = game:GetService("TeleportService")
local ButtonPressedEvent = game.ReplicatedStorage.RemoteEvents.ButtonPressed

local TPPlaceID = 14689927963

ButtonPressedEvent.OnServerEvent:Connect(function(Player)
    TPService:TeleportAsync(TPPlaceID, Player)
end)
